#!/bin/bash

set -e

source "/var/vcap/jobs/uaa/bin/configure_proxy"
source "/var/vcap/jobs/uaa/bin/configure_newrelic"

export PATH="/var/vcap/packages/uaa/jdk/bin:$PATH"
export JAVA_OPTS="-DPID=$$ -Dnetworkaddress.cache.ttl=0 $HTTP_PROXY_JAVA_OPTIONS $NEWRELIC_OPTS $KEYSTORE_OPTS"

function process_certs {
  echo "`date` Processing certificates for Java cacerts file"
  rm -f "$CERT_CACHE_FILE"
  COUNTER=0
  # Load the cert into the Java keystore
  TEMP_CA_CERTS="$(mktemp -d)"

  cat "$CERT_FILE" |
  awk "split_after==1{n++;split_after=0} /-----END CERTIFICATE-----/ {split_after=1} {print > (\"$TEMP_CA_CERTS/cert\" n \".pem\")}"

  echo "`date` Removing old certificates"
  /var/vcap/packages/uaa/jdk/bin/keytool -list -keystore "$TRUST_STORE_FILE" -storepass "changeit" | grep -o "uaa_start_.*.pem" | while read truststore_alias; do
    echo "`date` Removing certificate $truststore_alias"
    /var/vcap/packages/uaa/jdk/bin/keytool -noprompt -delete -alias "$truststore_alias" -keystore "$TRUST_STORE_FILE" -storepass "changeit"
  done

  echo "`date` Done removing old certificates, adding new certificates"
  for cert in $TEMP_CA_CERTS/*; do
    cat "$cert" | /var/vcap/packages/uaa/jdk/bin/keytool -noprompt \
    -import \
    -trustcacerts \
    -alias "uaa_start_$(basename $cert)" \
    -keystore "$TRUST_STORE_FILE" \
    -storepass changeit || true

    let COUNTER=COUNTER+1
    echo "`date` [uaa]   Processed certificate $COUNTER of $CERTS"
  done

  if [ "$COUNTER" -eq "$CERTS" ]; then
    echo "`date` [uaa] Java keystore creation completed."
    cp "$CERT_FILE" "$CERT_CACHE_FILE"
  fi
  rm -rf "$TEMP_CA_CERTS"
}

echo "`date` [uaa] UAA Preparing Certs"
CERT_FILE="/tmp/ca-certificates.crt"
cp /var/lib/ca-certificates/ca-bundle.pem "$CERT_FILE"

CONF_DIR="/var/vcap/jobs/uaa/config"
CACHE_DIR="/var/vcap/data/uaa/cert-cache"

CERT_CACHE_FILE="$CACHE_DIR/cacerts-cache.txt"
TRUST_STORE_FILE="$CACHE_DIR/cacerts"

CERTS=$(grep "END CERTIFICATE" "$CERT_FILE" | wc -l)

mkdir -p "$CACHE_DIR"

# Run loading of additional certs (i.e. from os-conf) in background. Continue starting tomcat.
if [ -a "$CERT_CACHE_FILE" ] && [ -a "$TRUST_STORE_FILE" ]; then
  if diff "$CERT_CACHE_FILE" "$CERT_FILE" >/dev/null; then
    echo "`date` [uaa-ctl] No changes to CA certificates. Will not build Java keystore file."
  else
    echo "`date` [uaa-ctl] Changes to CA certificates detected."
    process_certs &
  fi
else
  process_certs &
fi

echo "`date` [uaa-start] Calling Tomcat start up command"
<% if p("bpm.enabled") %>
  /var/vcap/packages/uaa/tomcat/bin/catalina.sh run &
  CATALINA_PID=$!
  echo "`date` [uaa-start] uaa/tomcat started in background. Waiting for signals"
  wait "${CATALINA_PID}"
  EXIT_STATUS=$?
  echo "`date` [uaa-start] uaa/tomcat job exiting."
  exit $EXIT_STATUS
<% else %>
  exec chpst -u vcap:vcap /var/vcap/data/uaa/tomcat/bin/catalina.sh run
<% end %>
